name: "Deploy with Bacon"
description: "Deploy DNS records with Bacon"
branding:
  icon: cloud-lightning
  color: red
inputs:
  api-key:
    description: "Porkbun API key"
    required: true
  secret-key:
    description: "Porkbun secret key"
    required: true
  config:
    description: "Config file to deploy"
    required: true
  create:
    description: "Create new records"
    required: false
  delete:
    description: "Delete outdated records"
    required: false
  version:
    description: "Version of Bacon to download and use"
    required: false
    default: latest
runs:
  using: "composite"
  steps:
    - uses: pozetroninc/github-action-get-latest-release@v0.5.0
      name: Fetch Bacon version
      id: get-bacon-release
      with:
        owner: jungaretti
        repo: bacon
        excludes: prerelease, draft
    - name: Download Bacon
      id: download-bacon
      shell: bash
      run: |
        version="${{ inputs.version }}"
        if [ "$version" = "latest" ]; then
          version="${{ steps.get-bacon-release.outputs.release }}"
        fi

        asset="bacon-$version-linux-amd64.tar.gz"
        url="https://github.com/jungaretti/bacon/releases/download/$version/$asset"

        # Download Bacon
        pushd "$(mktemp -d)"
        wget $url -O $asset --progress=dot:mega
        tar -xf $asset
        echo "::set-output name=bacon_bin::$(pwd)/bacon"
    - name: Deploy records
      shell: bash
      env:
        BACON_BIN: ${{ steps.download-bacon.outputs.bacon_bin }}
        PORKBUN_API_KEY: ${{ inputs.api-key }}
        PORKBUN_SECRET_KEY: ${{ inputs.secret-key }}
      run: |
        test "${{ inputs.delete }}" = 'true' && DELETE='-d' || DELETE=''
        test "${{ inputs.create }}" = 'true' && CREATE='-c' || CREATE=''
        $BACON_BIN ping && $BACON_BIN deploy ${{ inputs.config }} $DELETE $CREATE
