name: "Deploy with Bacon"
description: "Deploy DNS records with Bacon"
branding:
  icon: cloud-lightning
  color: red
inputs:
  api-key:
    description: "Porkbun API key"
    required: true
  secret-key:
    description: "Porkbun secret key"
    required: true
  config:
    description: "Config file to deploy"
    required: true
  create:
    description: "Create new records"
    required: false
  delete:
    description: "Delete outdated records"
    required: false
  version:
    description: "Version of Bacon to download and use"
    required: false
    default: latest
runs:
  using: "composite"
  steps:
    - name: Select tag
      id: select-tag
      shell: bash
      run: |
        tag_name="${{ inputs.version }}"
        if [ "$tag_name" = "latest" ]; then
          tag_name="$(curl -s "https://api.github.com/repos/jungaretti/bacon/releases/latest" | jq -r '.tag_name')"
        fi

        echo "Selected tag $tag_name"
        echo "BACON_TAG_NAME=$tag_name" >> "$GITHUB_OUTPUT"
    - name: Select asset
      id: select-asset
      shell: bash
      env:
        BACON_TAG_NAME: ${{ steps.select-tag.outputs.BACON_TAG_NAME }}
      run: |
        asset="bacon-$BACON_TAG_NAME-linux-amd64.tar.gz"
        asset_url="https://github.com/jungaretti/bacon/releases/download/$BACON_TAG_NAME/$asset"

        echo "Selected asset $asset at $asset_url"
        echo "BACON_ASSET=$asset" >> "$GITHUB_OUTPUT"
        echo "BACON_ASSET_URL=$asset_url" >> "$GITHUB_OUTPUT"
    - name: Download asset
      id: download-asset
      shell: bash
      env:
        BACON_ASSET: ${{ steps.select-asset.outputs.BACON_ASSET }}
        BACON_ASSET_URL: ${{ steps.select-asset.outputs.BACON_ASSET_URL }}
      run: |
        pushd "$(mktemp -d)"
        wget $BACON_ASSET_URL -O $BACON_ASSET --progress=dot:mega
        tar -xf $BACON_ASSET

        bacon_bin="$(pwd)/bacon"
        echo "Downloaded $bacon_bin"

        echo "BACON_BIN=$bacon_bin" >> "$GITHUB_OUTPUT"
    - name: bacon ping
      shell: bash
      env:
        BACON_BIN: ${{ steps.download-asset.outputs.BACON_BIN }}
        PORKBUN_API_KEY: ${{ inputs.api-key }}
        PORKBUN_SECRET_KEY: ${{ inputs.secret-key }}
      run: |
        $BACON_BIN ping
    - name: bacon deploy
      shell: bash
      env:
        BACON_BIN: ${{ steps.download-asset.outputs.BACON_BIN }}
        PORKBUN_API_KEY: ${{ inputs.api-key }}
        PORKBUN_SECRET_KEY: ${{ inputs.secret-key }}
      run: |
        test "${{ inputs.delete }}" = 'true' && DELETE='-d' || DELETE=''
        test "${{ inputs.create }}" = 'true' && CREATE='-c' || CREATE=''

        deploy_command="$BACON_BIN deploy ${{ inputs.config }} $DELETE $CREATE"
        
        echo "Running $deploy_command"
        $deploy_command
